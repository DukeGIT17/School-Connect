@model SystemAdminProfileModel
@{
    Layout = null;
}
<link rel="stylesheet" href="~/css/SysAdminCSS/SysAdminViewProfile.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<div class="card">
    <div class="left-container">
        <div class="profile-image">
            <div class="icon"><i class="fas fa-user"></i></div>
        </div>
        <h2 class="gradienttext">@Model.Admin.Name @Model.Admin.Surname</h2>
        <h2>@Model.Admin.Role</h2>
    </div>
    <div class="right-container">
        <h3>Profile Details</h3>
        <table>
            <tr>
                <td>@Html.DisplayNameFor(s => s.Admin.Name)</td>
                <td>@Model.Admin.Name</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(s => s.Admin.Surname)</td>
                <td>@Model.Admin.Surname</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(s => s.Admin.StaffNr)</td>
                <td>@Model.Admin.StaffNr</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(s => s.EmisNumber)</td>
				<td>@Model.EmisNumber</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(s => s.Admin.PhoneNumber)</td>
                <td>@Model.Admin.PhoneNumber</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(s => s.Admin.EmailAddress)</td>
                <td>@Model.Admin.EmailAddress</td>
            </tr>
        </table>
    </div>
</div>

<script>
    const togglePassword = document.getElementById('togglePassword');
    const passwordInput = document.getElementById('password');
    const editCellBtn = document.getElementById('editCell');
    const editEmailBtn = document.getElementById('editEmail');
    const editPasswordBtn = document.getElementById('editPassword');
    const cellInput = document.getElementById('cell');
    const emailInput = document.getElementById('email');
    const saveChangesBtn = document.getElementById('saveChanges');

    // Toggle password visibility
    togglePassword.addEventListener('click', function () {
        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            togglePassword.classList.remove('fa-eye');
            togglePassword.classList.add('fa-eye-slash');
        } else {
            passwordInput.type = 'password';
            togglePassword.classList.remove('fa-eye-slash');
            togglePassword.classList.add('fa-eye');
        }
    });

    // Enable editing for cell number
    editCellBtn.addEventListener('click', function () {
        cellInput.readOnly = false;
        cellInput.focus();
        saveChangesBtn.style.display = 'inline-block';
    });

    // Enable editing for email
    editEmailBtn.addEventListener('click', function () {
        emailInput.readOnly = false;
        emailInput.focus();
        saveChangesBtn.style.display = 'inline-block';
    });

    // Enable editing for password
    editPasswordBtn.addEventListener('click', function () {
        passwordInput.readOnly = false;
        passwordInput.focus();
        saveChangesBtn.style.display = 'inline-block';
    });

    // Simulate saving changes
    saveChangesBtn.addEventListener('click', function () {
        cellInput.readOnly = true;
        emailInput.readOnly = true;
        passwordInput.readOnly = true;
        saveChangesBtn.style.display = 'none';

        // Here you would typically make an API call to save the updated data
        alert('Changes saved successfully!');
    });
</script>
